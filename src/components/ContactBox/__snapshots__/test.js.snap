// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contact Box Renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContactBox />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="form-container"
      >
        <form
          onSubmit={[Function]}
        >
          <div
            className="form-group row"
          >
            <label
              className="col-sm-4 col-form-label"
              htmlFor="email"
            >
              Email:
            </label>
            <div
              className="col-sm-8"
            >
              <input
                className="form-control"
                id="email"
                name="email"
                onChange={[Function]}
                required={true}
                type="email"
                value=""
              />
            </div>
          </div>
          <div
            className="form-group row"
          >
            <label
              className="col-sm-4 col-form-label"
              htmlFor="message"
            >
              Message:
            </label>
            <div
              className="col-sm-8"
            >
              <textarea
                className="form-control"
                id="message"
                name="message"
                onChange={[Function]}
                required={true}
                value=""
              />
            </div>
          </div>
          <button
            className="btn btn-default"
            id="submit"
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
        >
          <div
            className="form-group row"
          >
            <label
              className="col-sm-4 col-form-label"
              htmlFor="email"
            >
              Email:
            </label>
            <div
              className="col-sm-8"
            >
              <input
                className="form-control"
                id="email"
                name="email"
                onChange={[Function]}
                required={true}
                type="email"
                value=""
              />
            </div>
          </div>
          <div
            className="form-group row"
          >
            <label
              className="col-sm-4 col-form-label"
              htmlFor="message"
            >
              Message:
            </label>
            <div
              className="col-sm-8"
            >
              <textarea
                className="form-control"
                id="message"
                name="message"
                onChange={[Function]}
                required={true}
                value=""
              />
            </div>
          </div>
          <button
            className="btn btn-default"
            id="submit"
            type="submit"
          >
            Submit
          </button>
        </form>,
        "className": "form-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="form-group row"
            >
              <label
                className="col-sm-4 col-form-label"
                htmlFor="email"
              >
                Email:
              </label>
              <div
                className="col-sm-8"
              >
                <input
                  className="form-control"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                  value=""
                />
              </div>
            </div>,
            <div
              className="form-group row"
            >
              <label
                className="col-sm-4 col-form-label"
                htmlFor="message"
              >
                Message:
              </label>
              <div
                className="col-sm-8"
              >
                <textarea
                  className="form-control"
                  id="message"
                  name="message"
                  onChange={[Function]}
                  required={true}
                  value=""
                />
              </div>
            </div>,
            <button
              className="btn btn-default"
              id="submit"
              type="submit"
            >
              Submit
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="col-sm-4 col-form-label"
                  htmlFor="email"
                >
                  Email:
                </label>,
                <div
                  className="col-sm-8"
                >
                  <input
                    className="form-control"
                    id="email"
                    name="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                    value=""
                  />
                </div>,
              ],
              "className": "form-group row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email:",
                  "className": "col-sm-4 col-form-label",
                  "htmlFor": "email",
                },
                "ref": null,
                "rendered": "Email:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="form-control"
                    id="email"
                    name="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                    value=""
                  />,
                  "className": "col-sm-8",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "form-control",
                    "id": "email",
                    "name": "email",
                    "onChange": [Function],
                    "required": true,
                    "type": "email",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <label
                  className="col-sm-4 col-form-label"
                  htmlFor="message"
                >
                  Message:
                </label>,
                <div
                  className="col-sm-8"
                >
                  <textarea
                    className="form-control"
                    id="message"
                    name="message"
                    onChange={[Function]}
                    required={true}
                    value=""
                  />
                </div>,
              ],
              "className": "form-group row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Message:",
                  "className": "col-sm-4 col-form-label",
                  "htmlFor": "message",
                },
                "ref": null,
                "rendered": "Message:",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <textarea
                    className="form-control"
                    id="message"
                    name="message"
                    onChange={[Function]}
                    required={true}
                    value=""
                  />,
                  "className": "col-sm-8",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "form-control",
                    "id": "message",
                    "name": "message",
                    "onChange": [Function],
                    "required": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "textarea",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "btn btn-default",
              "id": "submit",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="form-container"
        >
          <form
            onSubmit={[Function]}
          >
            <div
              className="form-group row"
            >
              <label
                className="col-sm-4 col-form-label"
                htmlFor="email"
              >
                Email:
              </label>
              <div
                className="col-sm-8"
              >
                <input
                  className="form-control"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                  value=""
                />
              </div>
            </div>
            <div
              className="form-group row"
            >
              <label
                className="col-sm-4 col-form-label"
                htmlFor="message"
              >
                Message:
              </label>
              <div
                className="col-sm-8"
              >
                <textarea
                  className="form-control"
                  id="message"
                  name="message"
                  onChange={[Function]}
                  required={true}
                  value=""
                />
              </div>
            </div>
            <button
              className="btn btn-default"
              id="submit"
              type="submit"
            >
              Submit
            </button>
          </form>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            onSubmit={[Function]}
          >
            <div
              className="form-group row"
            >
              <label
                className="col-sm-4 col-form-label"
                htmlFor="email"
              >
                Email:
              </label>
              <div
                className="col-sm-8"
              >
                <input
                  className="form-control"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  required={true}
                  type="email"
                  value=""
                />
              </div>
            </div>
            <div
              className="form-group row"
            >
              <label
                className="col-sm-4 col-form-label"
                htmlFor="message"
              >
                Message:
              </label>
              <div
                className="col-sm-8"
              >
                <textarea
                  className="form-control"
                  id="message"
                  name="message"
                  onChange={[Function]}
                  required={true}
                  value=""
                />
              </div>
            </div>
            <button
              className="btn btn-default"
              id="submit"
              type="submit"
            >
              Submit
            </button>
          </form>,
          "className": "form-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="form-group row"
              >
                <label
                  className="col-sm-4 col-form-label"
                  htmlFor="email"
                >
                  Email:
                </label>
                <div
                  className="col-sm-8"
                >
                  <input
                    className="form-control"
                    id="email"
                    name="email"
                    onChange={[Function]}
                    required={true}
                    type="email"
                    value=""
                  />
                </div>
              </div>,
              <div
                className="form-group row"
              >
                <label
                  className="col-sm-4 col-form-label"
                  htmlFor="message"
                >
                  Message:
                </label>
                <div
                  className="col-sm-8"
                >
                  <textarea
                    className="form-control"
                    id="message"
                    name="message"
                    onChange={[Function]}
                    required={true}
                    value=""
                  />
                </div>
              </div>,
              <button
                className="btn btn-default"
                id="submit"
                type="submit"
              >
                Submit
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="col-sm-4 col-form-label"
                    htmlFor="email"
                  >
                    Email:
                  </label>,
                  <div
                    className="col-sm-8"
                  >
                    <input
                      className="form-control"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      value=""
                    />
                  </div>,
                ],
                "className": "form-group row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Email:",
                    "className": "col-sm-4 col-form-label",
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": "Email:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <input
                      className="form-control"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      required={true}
                      type="email"
                      value=""
                    />,
                    "className": "col-sm-8",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "id": "email",
                      "name": "email",
                      "onChange": [Function],
                      "required": true,
                      "type": "email",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <label
                    className="col-sm-4 col-form-label"
                    htmlFor="message"
                  >
                    Message:
                  </label>,
                  <div
                    className="col-sm-8"
                  >
                    <textarea
                      className="form-control"
                      id="message"
                      name="message"
                      onChange={[Function]}
                      required={true}
                      value=""
                    />
                  </div>,
                ],
                "className": "form-group row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Message:",
                    "className": "col-sm-4 col-form-label",
                    "htmlFor": "message",
                  },
                  "ref": null,
                  "rendered": "Message:",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <textarea
                      className="form-control"
                      id="message"
                      name="message"
                      onChange={[Function]}
                      required={true}
                      value=""
                    />,
                    "className": "col-sm-8",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "id": "message",
                      "name": "message",
                      "onChange": [Function],
                      "required": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "textarea",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "className": "btn btn-default",
                "id": "submit",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "form",
        },
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
