// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Contact Box Renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContactBox />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div>
          Say hi!
        </div>,
        <form
          onSubmit={[Function]}
        >
          <div
            className="form-control"
          >
            <label
              htmlFor="email"
            >
              Email:
            </label>
          </div>
          <div
            className="form-control"
          >
            <input
              className="form-field"
              id="email"
              name="email"
              onChange={[Function]}
              type="email"
              value=""
            />
          </div>
          <div
            className="form-control"
          >
            <label
              htmlFor="message"
            >
              Message:
            </label>
          </div>
          <div
            className="form-control"
          >
            <textarea
              className="form-field"
              id="message"
              name="message"
              onChange={[Function]}
              value=""
            />
          </div>
          <div
            className="form-control"
          >
            <input
              className="form-field"
              id="submit"
              type="submit"
              value="Submit"
            />
          </div>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Say hi!",
        },
        "ref": null,
        "rendered": "Say hi!",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="form-control"
            >
              <label
                htmlFor="email"
              >
                Email:
              </label>
            </div>,
            <div
              className="form-control"
            >
              <input
                className="form-field"
                id="email"
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />
            </div>,
            <div
              className="form-control"
            >
              <label
                htmlFor="message"
              >
                Message:
              </label>
            </div>,
            <div
              className="form-control"
            >
              <textarea
                className="form-field"
                id="message"
                name="message"
                onChange={[Function]}
                value=""
              />
            </div>,
            <div
              className="form-control"
            >
              <input
                className="form-field"
                id="submit"
                type="submit"
                value="Submit"
              />
            </div>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <label
                htmlFor="email"
              >
                Email:
              </label>,
              "className": "form-control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Email:",
                "htmlFor": "email",
              },
              "ref": null,
              "rendered": "Email:",
              "type": "label",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-field"
                id="email"
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />,
              "className": "form-control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-field",
                "id": "email",
                "name": "email",
                "onChange": [Function],
                "type": "email",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <label
                htmlFor="message"
              >
                Message:
              </label>,
              "className": "form-control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Message:",
                "htmlFor": "message",
              },
              "ref": null,
              "rendered": "Message:",
              "type": "label",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <textarea
                className="form-field"
                id="message"
                name="message"
                onChange={[Function]}
                value=""
              />,
              "className": "form-control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-field",
                "id": "message",
                "name": "message",
                "onChange": [Function],
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-field"
                id="submit"
                type="submit"
                value="Submit"
              />,
              "className": "form-control",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-field",
                "id": "submit",
                "type": "submit",
                "value": "Submit",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "form",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div>
            Say hi!
          </div>,
          <form
            onSubmit={[Function]}
          >
            <div
              className="form-control"
            >
              <label
                htmlFor="email"
              >
                Email:
              </label>
            </div>
            <div
              className="form-control"
            >
              <input
                className="form-field"
                id="email"
                name="email"
                onChange={[Function]}
                type="email"
                value=""
              />
            </div>
            <div
              className="form-control"
            >
              <label
                htmlFor="message"
              >
                Message:
              </label>
            </div>
            <div
              className="form-control"
            >
              <textarea
                className="form-field"
                id="message"
                name="message"
                onChange={[Function]}
                value=""
              />
            </div>
            <div
              className="form-control"
            >
              <input
                className="form-field"
                id="submit"
                type="submit"
                value="Submit"
              />
            </div>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Say hi!",
          },
          "ref": null,
          "rendered": "Say hi!",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="form-control"
              >
                <label
                  htmlFor="email"
                >
                  Email:
                </label>
              </div>,
              <div
                className="form-control"
              >
                <input
                  className="form-field"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value=""
                />
              </div>,
              <div
                className="form-control"
              >
                <label
                  htmlFor="message"
                >
                  Message:
                </label>
              </div>,
              <div
                className="form-control"
              >
                <textarea
                  className="form-field"
                  id="message"
                  name="message"
                  onChange={[Function]}
                  value=""
                />
              </div>,
              <div
                className="form-control"
              >
                <input
                  className="form-field"
                  id="submit"
                  type="submit"
                  value="Submit"
                />
              </div>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <label
                  htmlFor="email"
                >
                  Email:
                </label>,
                "className": "form-control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Email:",
                  "htmlFor": "email",
                },
                "ref": null,
                "rendered": "Email:",
                "type": "label",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="form-field"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  type="email"
                  value=""
                />,
                "className": "form-control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-field",
                  "id": "email",
                  "name": "email",
                  "onChange": [Function],
                  "type": "email",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <label
                  htmlFor="message"
                >
                  Message:
                </label>,
                "className": "form-control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Message:",
                  "htmlFor": "message",
                },
                "ref": null,
                "rendered": "Message:",
                "type": "label",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <textarea
                  className="form-field"
                  id="message"
                  name="message"
                  onChange={[Function]}
                  value=""
                />,
                "className": "form-control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-field",
                  "id": "message",
                  "name": "message",
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="form-field"
                  id="submit"
                  type="submit"
                  value="Submit"
                />,
                "className": "form-control",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-field",
                  "id": "submit",
                  "type": "submit",
                  "value": "Submit",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
